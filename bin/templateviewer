#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Long qw(GetOptionsFromArray :config gnu_getopt auto_version);
use Pod::Usage;
use Path::Class;
use Cwd;

use App::TemplateViewer;

use Plack::Builder;
use Plack::Runner;
use version 0.77; our $VERSION = qv("v0.1.0");

my @plackup_args = ();

sub parse_args {
    my @args         = @_;
    my %h            = ();
    my @args_pattern = ( 'help|h', 'format|f=s', 'data|d=s', 'target|t=s', 'port|p=i', 'builder|b=s' );
    $h{format} = 'tt2';
    if ( not GetOptionsFromArray( \@args, \%h, @args_pattern ) ) { pod2usage(2); return; }
    if ( exists $h{help} )    { pod2usage(1); return; }
    if ( not App::TemplateViewer->is_supported_format( $h{format} ) ) {
        printf STDERR "%s is not supported\n", $h{format};
        printf STDERR "supported type : %s\n", join q{ }, App::TemplateViewer->supported_format;
        return;
    }
    if ( exists $h{builder} ) {
        if ( not -f $h{builder} ) {
            print STDERR "$h{builder} is not found";
            return;
        }
        else {
            $h{builder_app} = do $h{builder};

        }
    }
    $h{target} ||= getcwd();
    if ( not -d $h{target} ) {
        printf STDERR "%s is not directory\n", $h{target};
        return;
    }
    else {
        $h{target} = dir( $h{target} )->absolute->resolve;
    }

    if ( @args > 0 ) {
        @plackup_args = @args;
    }

    # TODO temp
    $h{data} ||= '/tmp/templateviewer';

    # set plackup_args
    foreach my $k (qw(port)) {
        if ( exists $h{$k} ){
            push @plackup_args, "--$k", delete $h{$k};
        }
    }
    return \%h;
}

my $args    = parse_args(@ARGV) or exit 0;
my $watcher = App::TemplateViewer::FileWatcher->new(watch => [$args->{target}]);
$watcher->run;

my $app = builder {
    $h{builder_app};
    App::TemplateViewer->run($args);
};
if ( $ENV{TEST} ) {
    return $app;
}
my $runner = Plack::Runner->new;
$runner->parse_options(@plackup_args);
$runner->run($app);

__END__

=pod

=head1 NAME

templateviewer - template viewer

=head1 SYNOPSIS

  templateviewer [options] [ -- [plackup options] ]

=head1 DESCRIPTION

templateviewer is template viewer

=head1 OPTIONS

=over 8

=item B<--target|-t> /path/to/target

set target directory. ( default: current directory )

=item B<--data|-d> /path/to/data/dir

set data directory. ( default: /tmp/templateviewer/ )

=item B<--format|-f> format

set default format type. ( default: tt2 )

=item B<--port|p> port_number

this option is passed to plackup

=item B<--builer|b> builder_file

builder file is psgi file for set static file url and so on.

=item B<--help|-h>

show help

=item B<--version>

show version

=item B<--> plack options

you can pass options after B<--> to plackup

=back

=head1 AUTHOR

ywatase E<lt>ywatase@gmail.comE<gt>

=head1 SEE ALSO

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# vim: set ft=perl:
