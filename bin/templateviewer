#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Long qw(GetOptionsFromArray);
Getopt::Long::Configure("bundling");
use Pod::Usage;
use Path::Class;
use Cwd;

use App::TemplateViewer;
use Plack::Runner;

sub parse_args {
    my @args         = @_;
    my %h            = ();
    my @args_pattern = ( 'help|h', 'version', 'format|f=s', 'data|d=s', 'target|t=s' );
    $h{format} = 'tt2';
    if ( not GetOptionsFromArray( \@args, \%h, @args_pattern ) ) { pod2usage(2); exit 0; }
    if    ( exists $h{help} )    { pod2usage(1); exit 0; }
    elsif ( exists $h{version} ) { version();    exit 0; }
    if    ( not App::TemplateViewer->is_supported_format( $h{format} ) ) {
        printf STDERR "%s is not supported\n", $h{format};
        printf STDERR "supported type : %s\n", join q{ }, App::TemplateViewer->supported_format;
        exit 0;
    }
    $h{target} ||= $ARGV[0] || getcwd();
    if ( not -d $h{target} ) {
        printf STDERR "%s is not directory\n", $h{target};
        exit 0;
    }
    else {
        $h{target} = dir( $h{target} )->absolute->resolve;
    }
    # TODO temp
    $h{data} ||= '/tmp/templateviewer';
    return \%h;
}

my $args    = parse_args(@ARGV);
my $watcher = App::TemplateViewer::FileWatcher->new(watch => [$args->{target}]);
$watcher->run;

my $app = App::TemplateViewer->run($args);
if ( $ENV{TEST} ) {
    return $app;
}
my $runner = Plack::Runner->new;
$runner->parse_options();
$runner->run($app);

sub version {
    print <<EOS;
VERSION: $App::TemplateViewer::VERSION
EOS
}

__END__

=pod

=head1 NAME

templateviewer - template viewer

=head1 SYNOPSIS

  templateviewer [/path/to/target]

=head1 DESCRIPTION

templateviewer is template viewer

=head1 OPTIONS

=over 8

=item B<--target|-t> /path/to/target

set target directory. this option as same as first args.

=item B<--data|-d> /path/to/data/dir

set data directory. default: /tmp/tv_????/

=item B<--format|-f> format

set default format type

=item B<--help|-h>

show help

=item B<--version>

show version

=back

=head1 AUTHOR

ywatase E<lt>ywatase@gmail.comE<gt>

=head1 SEE ALSO

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# vim: set ft=perl:
